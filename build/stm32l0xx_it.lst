ARM GAS  /tmp/cc6290tY.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l0xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/stm32l0xx_it.c"
  18              		.section	.text.NMI_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	NMI_Handler
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	NMI_Handler:
  26              	.LFB0:
   1:Core/Src/stm32l0xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32l0xx_it.c **** /**
   3:Core/Src/stm32l0xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32l0xx_it.c ****   * @file    stm32l0xx_it.c
   5:Core/Src/stm32l0xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32l0xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32l0xx_it.c ****   * @attention
   8:Core/Src/stm32l0xx_it.c ****   *
   9:Core/Src/stm32l0xx_it.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/stm32l0xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32l0xx_it.c ****   *
  12:Core/Src/stm32l0xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32l0xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32l0xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32l0xx_it.c ****   *
  16:Core/Src/stm32l0xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32l0xx_it.c ****   */
  18:Core/Src/stm32l0xx_it.c **** #include "stm32l0xx_it.h"
  19:Core/Src/stm32l0xx_it.c **** #include <stdint.h>
  20:Core/Src/stm32l0xx_it.c **** 
  21:Core/Src/stm32l0xx_it.c **** volatile uint32_t msTick = 0;
  22:Core/Src/stm32l0xx_it.c **** 
  23:Core/Src/stm32l0xx_it.c **** /**
  24:Core/Src/stm32l0xx_it.c ****   * @brief This function handles Non maskable interrupt.
  25:Core/Src/stm32l0xx_it.c ****   */
  26:Core/Src/stm32l0xx_it.c **** void NMI_Handler(void)
  27:Core/Src/stm32l0xx_it.c **** {
  27              		.loc 1 27 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc6290tY.s 			page 2


  32              		@ link register save eliminated.
  33              	.L2:
  28:Core/Src/stm32l0xx_it.c ****   while (1)
  34              		.loc 1 28 3 discriminator 1 view .LVU1
  29:Core/Src/stm32l0xx_it.c ****   {
  30:Core/Src/stm32l0xx_it.c ****   }
  35              		.loc 1 30 3 discriminator 1 view .LVU2
  28:Core/Src/stm32l0xx_it.c ****   while (1)
  36              		.loc 1 28 9 discriminator 1 view .LVU3
  37 0000 FEE7     		b	.L2
  38              		.cfi_endproc
  39              	.LFE0:
  41              		.section	.text.HardFault_Handler,"ax",%progbits
  42              		.align	1
  43              		.global	HardFault_Handler
  44              		.syntax unified
  45              		.code	16
  46              		.thumb_func
  48              	HardFault_Handler:
  49              	.LFB1:
  31:Core/Src/stm32l0xx_it.c **** }
  32:Core/Src/stm32l0xx_it.c **** 
  33:Core/Src/stm32l0xx_it.c **** /**
  34:Core/Src/stm32l0xx_it.c ****   * @brief This function handles Hard fault interrupt.
  35:Core/Src/stm32l0xx_it.c ****   */
  36:Core/Src/stm32l0xx_it.c **** void HardFault_Handler(void)
  37:Core/Src/stm32l0xx_it.c **** {
  50              		.loc 1 37 1 view -0
  51              		.cfi_startproc
  52              		@ Volatile: function does not return.
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  56              	.L4:
  38:Core/Src/stm32l0xx_it.c ****   while (1)
  57              		.loc 1 38 3 discriminator 1 view .LVU5
  39:Core/Src/stm32l0xx_it.c ****   {
  40:Core/Src/stm32l0xx_it.c ****   }
  58              		.loc 1 40 3 discriminator 1 view .LVU6
  38:Core/Src/stm32l0xx_it.c ****   while (1)
  59              		.loc 1 38 9 discriminator 1 view .LVU7
  60 0000 FEE7     		b	.L4
  61              		.cfi_endproc
  62              	.LFE1:
  64              		.section	.text.SVC_Handler,"ax",%progbits
  65              		.align	1
  66              		.global	SVC_Handler
  67              		.syntax unified
  68              		.code	16
  69              		.thumb_func
  71              	SVC_Handler:
  72              	.LFB2:
  41:Core/Src/stm32l0xx_it.c **** }
  42:Core/Src/stm32l0xx_it.c **** 
  43:Core/Src/stm32l0xx_it.c **** /**
  44:Core/Src/stm32l0xx_it.c ****   * @brief This function handles System service call via SWI instruction.
  45:Core/Src/stm32l0xx_it.c ****   */
ARM GAS  /tmp/cc6290tY.s 			page 3


  46:Core/Src/stm32l0xx_it.c **** void SVC_Handler(void)
  47:Core/Src/stm32l0xx_it.c **** {
  73              		.loc 1 47 1 view -0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
  48:Core/Src/stm32l0xx_it.c **** }
  78              		.loc 1 48 1 view .LVU9
  79              		@ sp needed
  80 0000 7047     		bx	lr
  81              		.cfi_endproc
  82              	.LFE2:
  84              		.section	.text.PendSV_Handler,"ax",%progbits
  85              		.align	1
  86              		.global	PendSV_Handler
  87              		.syntax unified
  88              		.code	16
  89              		.thumb_func
  91              	PendSV_Handler:
  92              	.LFB3:
  49:Core/Src/stm32l0xx_it.c **** 
  50:Core/Src/stm32l0xx_it.c **** /**
  51:Core/Src/stm32l0xx_it.c ****   * @brief This function handles Pendable request for system service.
  52:Core/Src/stm32l0xx_it.c ****   */
  53:Core/Src/stm32l0xx_it.c **** void PendSV_Handler(void)
  54:Core/Src/stm32l0xx_it.c **** {
  93              		.loc 1 54 1 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		@ link register save eliminated.
  55:Core/Src/stm32l0xx_it.c **** 
  56:Core/Src/stm32l0xx_it.c **** }
  98              		.loc 1 56 1 view .LVU11
  99              		@ sp needed
 100 0000 7047     		bx	lr
 101              		.cfi_endproc
 102              	.LFE3:
 104              		.section	.text.SysTick_Handler,"ax",%progbits
 105              		.align	1
 106              		.global	SysTick_Handler
 107              		.syntax unified
 108              		.code	16
 109              		.thumb_func
 111              	SysTick_Handler:
 112              	.LFB4:
  57:Core/Src/stm32l0xx_it.c **** 
  58:Core/Src/stm32l0xx_it.c **** /**
  59:Core/Src/stm32l0xx_it.c ****   * @brief This function handles System tick timer.
  60:Core/Src/stm32l0xx_it.c ****   */
  61:Core/Src/stm32l0xx_it.c **** void SysTick_Handler(void)
  62:Core/Src/stm32l0xx_it.c **** {
 113              		.loc 1 62 1 view -0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc6290tY.s 			page 4


 117              		@ link register save eliminated.
  63:Core/Src/stm32l0xx_it.c ****   msTick = 0;
 118              		.loc 1 63 3 view .LVU13
 119              		.loc 1 63 10 is_stmt 0 view .LVU14
 120 0000 014B     		ldr	r3, .L8
 121 0002 0022     		movs	r2, #0
 122 0004 1A60     		str	r2, [r3]
  64:Core/Src/stm32l0xx_it.c **** }
 123              		.loc 1 64 1 view .LVU15
 124              		@ sp needed
 125 0006 7047     		bx	lr
 126              	.L9:
 127              		.align	2
 128              	.L8:
 129 0008 00000000 		.word	msTick
 130              		.cfi_endproc
 131              	.LFE4:
 133              		.section	.text.getTicks,"ax",%progbits
 134              		.align	1
 135              		.global	getTicks
 136              		.syntax unified
 137              		.code	16
 138              		.thumb_func
 140              	getTicks:
 141              	.LFB5:
  65:Core/Src/stm32l0xx_it.c **** 
  66:Core/Src/stm32l0xx_it.c **** uint32_t getTicks(void) {
 142              		.loc 1 66 25 is_stmt 1 view -0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146              		@ link register save eliminated.
  67:Core/Src/stm32l0xx_it.c ****   return msTick;
 147              		.loc 1 67 3 view .LVU17
 148              		.loc 1 67 10 is_stmt 0 view .LVU18
 149 0000 014B     		ldr	r3, .L11
 150 0002 1868     		ldr	r0, [r3]
  68:Core/Src/stm32l0xx_it.c **** }
 151              		.loc 1 68 1 view .LVU19
 152              		@ sp needed
 153 0004 7047     		bx	lr
 154              	.L12:
 155 0006 C046     		.align	2
 156              	.L11:
 157 0008 00000000 		.word	msTick
 158              		.cfi_endproc
 159              	.LFE5:
 161              		.global	msTick
 162              		.section	.bss.msTick,"aw",%nobits
 163              		.align	2
 166              	msTick:
 167 0000 00000000 		.space	4
 168              		.text
 169              	.Letext0:
 170              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 171              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
ARM GAS  /tmp/cc6290tY.s 			page 5


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l0xx_it.c
     /tmp/cc6290tY.s:19     .text.NMI_Handler:0000000000000000 $t
     /tmp/cc6290tY.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/cc6290tY.s:42     .text.HardFault_Handler:0000000000000000 $t
     /tmp/cc6290tY.s:48     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/cc6290tY.s:65     .text.SVC_Handler:0000000000000000 $t
     /tmp/cc6290tY.s:71     .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/cc6290tY.s:85     .text.PendSV_Handler:0000000000000000 $t
     /tmp/cc6290tY.s:91     .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/cc6290tY.s:105    .text.SysTick_Handler:0000000000000000 $t
     /tmp/cc6290tY.s:111    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/cc6290tY.s:129    .text.SysTick_Handler:0000000000000008 $d
     /tmp/cc6290tY.s:166    .bss.msTick:0000000000000000 msTick
     /tmp/cc6290tY.s:134    .text.getTicks:0000000000000000 $t
     /tmp/cc6290tY.s:140    .text.getTicks:0000000000000000 getTicks
     /tmp/cc6290tY.s:157    .text.getTicks:0000000000000008 $d
     /tmp/cc6290tY.s:163    .bss.msTick:0000000000000000 $d

NO UNDEFINED SYMBOLS
